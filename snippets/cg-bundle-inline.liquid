{%- comment -%}
CG Bundle Inline – FINAL
- Ergänzungsprodukt aus Metafeld (Standard: namespace 'shopify--discovery--product_recommendation' / key 'complementary_products')
- Optional andere Felder via mf_ns / mf_key
- AJAX: beide Artikel in den Warenkorb, Cart-Drawer/Bubble ohne Reload aktualisieren
- Aukey-Layout (zwei Kacheln + „=“ + rechte Spalte mit Gesamtpreis & Button)
- Scharfe Bilder (passende sizes/srcset), keine grauen Outlines
{%- endcomment -%}

{%- assign heading = heading | default: 'Passend dazu – im Bundle' -%}
{%- assign allow_variant_select = allow_variant_select | default: true -%}
{%- assign open_drawer = open_drawer | default: true -%}
{%- assign debug = debug | default: false -%}
{%- assign auk_style = auk_style | default: true -%}

{%- comment -%} Metafeld-Quellen (dein Standard + Fallbacks) {%- endcomment -%}
{%- assign mf_ns  = mf_ns  | default: 'shopify--discovery--product_recommendation' -%}
{%- assign mf_key = mf_key | default: 'complementary_products' -%}
{%- assign primary_mf = product.metafields[mf_ns][mf_key] -%}
{%- assign alt_mf1    = product.metafields['shopify--discovery']['product_recommendation.complementary_products'] -%}
{%- assign alt_mf2    = product.metafields['shopify--discovery--product_recommendation']['complementary_products'] -%}
{%- assign mf = nil -%}
{%- if primary_mf and primary_mf.value %}{% assign mf = primary_mf %}
{%- elsif alt_mf1 and alt_mf1.value %}{% assign mf = alt_mf1 %}
{%- elsif alt_mf2 and alt_mf2.value %}{% assign mf = alt_mf2 %}{% endif %}

{%- assign comp = nil -%}
{%- if mf and mf.type == 'product_reference' and mf.value -%}
  {%- assign comp = mf.value -%}
{%- elsif mf and mf.type == 'list.product_reference' and mf.value != blank -%}
  {%- assign comp = mf.value | first -%}
{%- endif -%}

<section class="cg-bundle{% if auk_style %} cg-bundle--auk{% endif %}"
  data-cg-bundle
  data-product-id="{{ product.id }}"
  data-allow-variant="{{ allow_variant_select }}"
  data-open-drawer="{{ open_drawer }}"
  data-debug="{{ debug }}"
  data-money-format='{{ shop.money_format | json }}'
  data-currency='{{ shop.currency | json }}'>

  <style>
    /* Basis */
    .cg-bundle{--bg:#f7f7f7;--border:#e9e9e9;--accent:#F19222;--text:#111;--muted:#666;
      max-width:1320px;margin:24px auto;padding:10px 20px;border:0;background:transparent}
    .cg-bundle__heading{font-size:1.05rem;font-weight:800;margin:0 0 12px;color:var(--text)}
    .cg-bundle__row{display:grid;grid-template-columns:1fr 40px 1fr;gap:24px;align-items:center}
    .cg-bundle__card{display:flex;gap:16px;align-items:center;padding:0;border:0;background:transparent;box-shadow:none}
    .cg-bundle__media{flex:0 0 auto;margin-bottom:10px}
    .cg-bundle__img{width:96px;height:96px;object-fit:contain;background:var(--bg);border-radius:10px;display:block;image-rendering:auto}
    .cg-bundle__body{display:flex;flex-direction:column}
    .cg-bundle__title{font-weight:700;color:var(--text);margin:0 0 2px;font-size:1rem;line-height:1.25;text-align:center}
    .cg-bundle__price{color:var(--text);font-size:.95rem;text-align:center}
    .cg-bundle__price--compare{color:var(--muted);margin-left:6px}
    .cg-bundle__select{display:flex;gap:8px;align-items:center;margin-top:8px;font-size:.9rem;color:var(--muted);justify-content:center}
    .cg-bundle__select select{padding:6px 8px;border:1px solid var(--border);border-radius:8px;min-width:180px;background:#fff}
    .cg-bundle__plus{font-weight:800;font-size:1.6rem;color:#bdbdbd;text-align:center}
    .cg-bundle__footer{display:flex;gap:14px;align-items:center;justify-content:flex-end;margin-top:14px}
    .cg-bundle__total{margin-right:auto;font-weight:700;color:var(--text);display:flex;gap:8px;align-items:center}
    .cg-bundle__btn{appearance:none;border:none;cursor:pointer;padding:14px 20px;background:var(--accent);color:#fff;border-radius:10px;font-weight:800;box-shadow:none;outline:none}
    .cg-bundle__btn.is-loading{opacity:.7;cursor:wait}
    .cg-bundle__btn:disabled{opacity:.65;cursor:default}
    .cg-bundle__msg{font-size:.95rem;color:var(--muted)}

    /* Aukey-Layout */
    .cg-bundle--auk .cg-bundle__row{
      grid-template-columns:minmax(260px,1fr) 56px minmax(260px,1fr) 56px 320px;
      gap:28px;align-items:center}
    .cg-bundle--auk .cg-bundle__card{flex-direction:column;align-items:center;text-align:center}
    .cg-bundle--auk .cg-bundle__img{width:180px;height:180px}
    .cg-bundle--auk .cg-bundle__title{margin-top:10px;font-size:.95rem;font-weight:600}
    .cg-bundle--auk .cg-bundle__price{margin-top:6px}
    .cg-bundle--auk .cg-bundle__equals{font-size:1.75rem;font-weight:800;color:#bdbdbd;text-align:center}
    .cg-bundle--auk .cg-bundle__aside{display:flex;flex-direction:column;gap:16px;align-items:stretch;justify-self:stretch}
    .cg-bundle--auk .cg-bundle__footer{display:none} /* Footer im Aukey-Layout nicht nötig */

    /* Gesamtpreis: Label klein, Preis groß */
    .cg-bundle__total--stack{display:flex;flex-direction:column;align-items:flex-start;gap:6px}
    .cg-bundle__total-label{font-size:.85rem;color:#6b7280;font-weight:600;letter-spacing:.01em}
    .cg-bundle__total-amount{font-size:1.8rem;line-height:1;font-weight:800}

    /* Responsive */
    @media (max-width:980px){
      .cg-bundle--auk .cg-bundle__row{grid-template-columns:1fr;gap:16px}
      .cg-bundle--auk .cg-bundle__plus,.cg-bundle--auk .cg-bundle__equals{display:none}
      .cg-bundle--auk .cg-bundle__img{width:140px;height:140px}
      .cg-bundle--auk .cg-bundle__aside{order:3}
    }

    /* --- Tweaks: stärkere Zeichen, größerer Preis, grauer Bildhintergrund --- */

/* Plus/Equal: schwarz & größer */
.cg-bundle--auk .cg-bundle__plus,
.cg-bundle--auk .cg-bundle__equals{
  color:#111 !important;
  font-size:2.25rem !important;
  line-height:1 !important;
}

/* Gesamtpreis größer */
.cg-bundle__total-amount{
  font-size:2.2rem !important;
  line-height:1 !important;
  font-weight:800 !important;
}

/* Alle grauen Outlines/Boxen zuverlässig weg */
.cg-bundle__card{
  border:0 !important;
  background:transparent !important;
  box-shadow:none !important;
}

/* Grauer Aukey-Background HINTER dem Bild (auf dem Wrapper) */
.cg-bundle--auk .cg-bundle__media{
  background:#f2f4f7 !important;   /* Hellgrau */
  border-radius:16px !important;    /* weiche Ecken wie Aukey */
  padding:14px !important;          /* Luft um das Bild */
}

/* Das Bild selbst ohne Hintergrund, damit das Grau sichtbar bleibt */
.cg-bundle--auk .cg-bundle__img{
  background:transparent !important;
  border-radius:12px !important;    /* optional minimal runder Look fürs Bild */
  display:block !important;
}


  </style>

  <div class="cg-bundle__heading">{{ heading }}</div>

  <div class="cg-bundle__row">
    <!-- Hauptprodukt -->
    <article class="cg-bundle__card cg-bundle__card--main"
      data-main-price="{{ product.selected_or_first_available_variant.price }}"
      data-main-compare="{{ product.selected_or_first_available_variant.compare_at_price | default: 0 }}"
      data-main-variant-id="{{ product.selected_or_first_available_variant.id }}">
      <div class="cg-bundle__media">
        {%- assign main_img = product.featured_image | default: product.images.first -%}
        {%- if main_img -%}
          {{ main_img
            | image_url: width: 600, format: 'pjpg'
            | image_tag:
                alt: product.title,
                loading: 'lazy',
                decoding: 'async',
                class: 'cg-bundle__img',
                sizes: '(min-width:980px) 180px, 140px',
                widths: '140, 180, 280, 360' }}
        {%- endif -%}
      </div>
      <div class="cg-bundle__body">
        <div class="cg-bundle__title">{{ product.title }}</div>
        {%- assign v = product.selected_or_first_available_variant -%}
        <div class="cg-bundle__price">
          {%- if v.compare_at_price > v.price -%}
            <span class="cg-bundle__price--sale">{{ v.price | money }}</span>
            <s class="cg-bundle__price--compare">{{ v.compare_at_price | money }}</s>
          {%- else -%}
            <span>{{ v.price | money }}</span>
          {%- endif -%}
        </div>
      </div>
    </article>

    <!-- Plus -->
    <div class="cg-bundle__plus" aria-hidden="true">+</div>

    <!-- Zusatzprodukt -->
    <article class="cg-bundle__card cg-bundle__card--comp" data-role="comp">
      {%- if comp -%}
        {%- assign comp_variant = comp.selected_or_first_available_variant -%}
        <div class="cg-bundle__media">
          {%- assign comp_img = comp.featured_image | default: comp.images.first -%}
          {%- if comp_img -%}
            {{ comp_img
              | image_url: width: 600, format: 'pjpg'
              | image_tag:
                  alt: comp.title,
                  loading: 'lazy',
                  decoding: 'async',
                  class: 'cg-bundle__img',
                  sizes: '(min-width:980px) 180px, 140px',
                  widths: '140, 180, 280, 360' }}
          {%- endif -%}
        </div>
        <div class="cg-bundle__body"
          data-comp-product-id="{{ comp.id }}"
          data-comp-variant-id="{{ comp_variant.id }}"
          data-comp-price="{{ comp_variant.price }}"
          data-comp-compare="{{ comp_variant.compare_at_price | default: 0 }}">
          <div class="cg-bundle__title">{{ comp.title }}</div>

          {%- if comp.variants.size > 1 and allow_variant_select -%}
            <label class="cg-bundle__select">
              <span>Variante</span>
              <select data-role="comp-variant">
                {%- for vv in comp.variants -%}
                  <option value="{{ vv.id }}" data-price="{{ vv.price }}"
                    data-compare="{{ vv.compare_at_price | default: 0 }}"
                    {% if vv.available %}{% else %}disabled{% endif %}
                    {% if vv.id == comp_variant.id %}selected{% endif %}>
                    {{ vv.title }}{% unless vv.available %} – ausverkauft{% endunless %}
                  </option>
                {%- endfor -%}
              </select>
            </label>
          {%- else -%}
            <input type="hidden" data-role="comp-variant"
              value="{{ comp_variant.id }}"
              data-price="{{ comp_variant.price }}"
              data-compare="{{ comp_variant.compare_at_price | default: 0 }}">
          {%- endif -%}

          <div class="cg-bundle__price">
            {%- if comp_variant.compare_at_price > comp_variant.price -%}
              <span class="cg-bundle__price--sale">{{ comp_variant.price | money }}</span>
              <s class="cg-bundle__price--compare">{{ comp_variant.compare_at_price | money }}</s>
            {%- else -%}
              <span>{{ comp_variant.price | money }}</span>
            {%- endif -%}
          </div>
        </div>
      {%- else -%}
        <div class="cg-bundle__body" data-role="comp-empty">
          <div class="cg-bundle__title">Kein Ergänzungsprodukt gefunden.</div>
        </div>
      {%- endif -%}
    </article>

    <!-- Gleich + rechte Spalte -->
    <div class="cg-bundle__equals" aria-hidden="true">=</div>
    <div class="cg-bundle__aside">
      <div class="cg-bundle__total cg-bundle__total--stack">
        <div class="cg-bundle__total-label">Gesamtpreis</div>
        <div class="cg-bundle__total-amount" data-role="bundle-total">–</div>
      </div>
      <button type="button" class="cg-bundle__btn" data-role="bundle-add">
        Beide in den Warenkorb
      </button>
      <div class="cg-bundle__msg" aria-live="polite"></div>
    </div>
  </div>

  <!-- Klassischer Footer (für Nicht-Aukey-Layout); im Aukey-Layout ausgeblendet -->
  <div class="cg-bundle__footer">
    <div class="cg-bundle__total">
      <span>Gesamt:</span> <strong data-role="bundle-total">–</strong>
    </div>
    <button type="button" class="cg-bundle__btn" data-role="bundle-add">Beide in den Warenkorb</button>
    <div class="cg-bundle__msg" aria-live="polite"></div>
  </div>
</section>

<script>
(() => {
  const root = document.currentScript.previousElementSibling;
  if (!root || !root.matches('.cg-bundle')) return;

  const DEBUG = root.getAttribute('data-debug') === 'true';
  const OPEN_DRAWER = root.getAttribute('data-open-drawer') === 'true';
  const moneyFormat = JSON.parse(root.getAttribute('data-money-format') || '"€{{amount}}"');
  const currency = JSON.parse(root.getAttribute('data-currency') || '"EUR"');
  const log = (...a)=>{ if (DEBUG) console.log('[CG-BUNDLE]', ...a); };

  /* Preise */
  const mainPrice = parseInt(root.querySelector('[data-main-price]').getAttribute('data-main-price')||'0',10);
  const compPrice = () => {
    const el = root.querySelector('[data-role="comp-variant"]');
    const p = el?.selectedOptions?.[0]?.dataset.price || el?.dataset?.price || '0';
    return parseInt(p,10);
  };
  const fmt = (c)=> (window.Shopify?.formatMoney)
    ? Shopify.formatMoney(c, moneyFormat)
    : new Intl.NumberFormat(undefined,{style:'currency',currency}).format(c/100);
  const updateTotal = () => root.querySelectorAll('[data-role="bundle-total"]').forEach(n => n.textContent = fmt(mainPrice+compPrice()));
  updateTotal();

  /* Cart UI aktualisieren */
  function detectCartSectionHandles(){
    const nodes = Array.from(document.querySelectorAll('[id^="shopify-section-"]'));
    const handles = nodes.map(el => el.id.replace('shopify-section-',''))
      .filter(h => /(cart|drawer|mini|icon|notification)/i.test(h));
    return [...new Set(handles)];
  }
  async function refreshCartUI(){
    try{
      // Badge & Events
      const res = await fetch('/cart.js',{credentials:'same-origin'});
      if (!res.ok) throw new Error('cart.js');
      const cart = await res.json();
      const cnt = document.querySelector('[data-cart-count], .cart-count-bubble .text, .site-header__cart-count');
      if (cnt){ cnt.textContent = cart.item_count; cnt.style.display = cart.item_count ? '' : 'none'; }
      ['cart:refresh','cart:updated','ajaxProduct:added','theme:cart:change','cart:change']
        .forEach(n => {
          document.dispatchEvent(new CustomEvent(n,{detail:{source:'cg-bundle',cart}}));
          window.dispatchEvent(new CustomEvent(n,{detail:{source:'cg-bundle',cart}}));
        });

      // Sections nachladen
      const handles = detectCartSectionHandles();
      if (handles.length){
        const url = `${(window.Shopify?.routes?.root)||'/'}?sections=${handles.join(',')}`;
        const sec = await fetch(url,{credentials:'same-origin'});
        if (sec.ok){
          const htmls = await sec.json();
          Object.keys(htmls||{}).forEach(key => {
            const target = document.getElementById(`shopify-section-${key}`) ||
                           document.querySelector(`[data-section-id="${key}"]`);
            if (target) target.innerHTML = htmls[key];
          });
        }
      }

      // Drawer öffnen
      if (OPEN_DRAWER){
        const drawer = document.querySelector('cart-drawer');
        if (drawer && typeof drawer.open === 'function') drawer.open();
        const toggle = document.querySelector(
          '[data-drawer-trigger="cart"], [data-cart-toggle], [data-open-cart], button[aria-controls*="Cart"], a[href="/cart"]'
        );
        if (toggle) { try{ toggle.click(); }catch(e){} }
      }
    }catch(e){ log('refreshCartUI error', e); }
  }

  /* Add beide */
  async function addBoth(){
    const btn = root.querySelector('[data-role="bundle-add"]');
    const msg = root.querySelector('.cg-bundle__msg');

    const idInput = document.querySelector('form[action*="/cart/add"] input[name="id"]');
    const mainId = idInput?.value
      ? parseInt(idInput.value,10)
      : parseInt(root.querySelector('[data-main-variant-id]').getAttribute('data-main-variant-id'),10);

    const compEl = root.querySelector('[data-role="comp-variant"]');
    const compId = compEl ? parseInt(compEl.value,10) : null;
    if (!compId){ msg.textContent='Bitte Variante wählen.'; return; }

    btn.disabled = true; btn.classList.add('is-loading'); msg.textContent='Wird hinzugefügt …';
    try{
      const res = await fetch('/cart/add.js',{
        method:'POST',
        headers:{'Content-Type':'application/json','Accept':'application/json'},
        credentials:'same-origin',
        body: JSON.stringify({ items:[ {id:mainId,quantity:1}, {id:compId,quantity:1} ] })
      });
      if (!res.ok) throw new Error('add failed');

      btn.textContent='Im Warenkorb';
      btn.classList.remove('is-loading');
      msg.textContent='';
      await refreshCartUI();
    }catch(e){
      btn.disabled=false; btn.classList.remove('is-loading');
      msg.textContent='Konnte nicht hinzugefügt werden. Bitte erneut versuchen.';
      log('addBoth error', e);
    }
  }

  /* Events */
  const sel = root.querySelector('[data-role="comp-variant"]');
  sel && sel.addEventListener('change', updateTotal);
  root.querySelectorAll('[data-role="bundle-add"]').forEach(b => b.addEventListener('click', addBoth));
})();
</script>
